From ff74c7034ee5c1b3943232ddd6ef773fe903fd8b Mon Sep 17 00:00:00 2001
From: Josef Holzmayr <jester@theyoctojester.info>
Date: Mon, 18 Nov 2024 06:41:20 +0000
Subject: [PATCH] pci/fdt: ignore checks for address range

On Raspberry Pi platforms running in 32bit mode, the checks
will skip one or more sections and block booting. By ignoring
the check result the boot process is successful.

A verbose message is printed to identify an ignored check.

Upstream-Status: Inappropriate [Mender specific]

Signed-off-by: Josef Holzmayr <jester@theyoctojester.info>
---
 drivers/pci/pci-uclass.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/drivers/pci/pci-uclass.c b/drivers/pci/pci-uclass.c
index e0d01f6a85..8c9c430101 100644
--- a/drivers/pci/pci-uclass.c
+++ b/drivers/pci/pci-uclass.c
@@ -1039,23 +1039,31 @@ static int decode_regions(struct pci_controller *hose, ofnode parent_node,
 
 		if (!IS_ENABLED(CONFIG_SYS_PCI_64BIT) &&
 		    type == PCI_REGION_MEM && upper_32_bits(pci_addr)) {
-			debug(" - pci_addr beyond the 32-bit boundary, ignoring\n");
-			continue;
+			printf("%s: region %d, pci_addr=%llx, addr=%llx, size=%llx, space_code=%d\n",
+				__func__, hose->region_count, pci_addr, addr, size, space_code);
+			printf(" - pci_addr beyond the 32-bit boundary, ignoring\n");
+//			continue;
 		}
 
 		if (!IS_ENABLED(CONFIG_PHYS_64BIT) && upper_32_bits(addr)) {
-			debug(" - addr beyond the 32-bit boundary, ignoring\n");
-			continue;
+			printf("%s: region %d, pci_addr=%llx, addr=%llx, size=%llx, space_code=%d\n",
+				__func__, hose->region_count, pci_addr, addr, size, space_code);
+			printf(" - addr beyond the 32-bit boundary, ignoring\n");
+//			continue;
 		}
 
 		if (~((pci_addr_t)0) - pci_addr < size) {
-			debug(" - PCI range exceeds max address, ignoring\n");
-			continue;
+			printf("%s: region %d, pci_addr=%llx, addr=%llx, size=%llx, space_code=%d\n",
+				__func__, hose->region_count, pci_addr, addr, size, space_code);
+			printf(" - PCI range exceeds max address, ignoring\n");
+//			continue;
 		}
 
 		if (~((phys_addr_t)0) - addr < size) {
-			debug(" - phys range exceeds max address, ignoring\n");
-			continue;
+			printf("%s: region %d, pci_addr=%llx, addr=%llx, size=%llx, space_code=%d\n",
+				__func__, hose->region_count, pci_addr, addr, size, space_code);
+			printf(" - phys range exceeds max address, ignoring\n");
+//			continue;
 		}
 
 		pos = -1;
-- 
2.34.1

